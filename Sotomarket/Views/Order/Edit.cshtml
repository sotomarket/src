@model Sotomarket.Models.OrderViewModel

@{
    ViewBag.Title = "Заказ";
}

<h2>Заказ</h2>

@using (Html.BeginForm(new { action="Edit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Редактирование</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientIdentifier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientIdentifier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientIdentifier, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Позиции <input type="button" value="Добавить" class="btn btn-success" id="addEditItem" /></h4>

        <table class="table" id="EditItemTable">
            <thead>
                <tr>
                    <th>
                        Наименование
                    </th>
                    <th>
                        Бренд
                    </th>
                    <th>
                        Категория товара
                    </th>
                    <th>
                        Подкатегория товара
                    </th>
                    <th>
                        Количество
                    </th>
                    <th>
                        Цена
                    </th>
                    <th>
                        Сумма
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.OrderItems != null)
                {
                    foreach (var item in Model.OrderItems)
                    {
                        @Html.Partial("EditItems", item)
                    }
                }
            </tbody>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-primary" />

                @Html.ActionLink("Отмена", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
<script type="text/template" id="EditItemsRow">
    @Html.Partial("EditItems", new Sotomarket.Models.OrderItemViewModel())
</script>

@section scripts {
    <script type="text/javascript">
    $(function () {

        function GoodsSelector(sender) {
            $.get('@Url.Action("IndexPartial", "Goods",new { hideZero=false })', function (data) {
                var dialog=bootbox.dialog({
                    title: 'Товары',
                    message: data,
                    onEscape: true,
                    size:'large',
                    buttons: {
                        cancel: {
                            label: "Отмена",
                            className: 'btn-default',
                        },
                        ok: {
                            label: "Выбрать",
                            className: 'btn-primary btn-select-item',
                            callback: function () {
                                SelectGoods($('#goodsTable > tbody > tr.selected-row'));
                            }
                        }
                    }
                });

                function SelectGoods(tr) {
                    if (!tr.length) {
                        return;
                    }

                    var row = sender.closest('tr');
                    $('.container-goodsid', row).val(tr.data('rowid'));
                    $('.container-goodsname', row).val($('td.container-Name', tr).html().trim());
                    $('.container-goodsbrand', row).val($('td.container-Brand', tr).html().trim());
                    $('.container-goodscategory', row).val($('td.container-GoodsCategory', tr).html().trim());
                    $('.container-goodssubcategory', row).val($('td.container-GoodsSubCategory', tr).html().trim());
                    $('.container-goodsprice', row).val($('td.container-GoodsPrice', tr).html().trim());
                }

                dialog.init(function () {
                    $('.btn-select-item').prop('disabled','disabled');
                    $('#goodsTable > tbody > tr').click(function () {
                        $('#goodsTable > tbody > tr').removeClass('selected-row');
                        $(this).addClass('selected-row');
                        $('.btn-select-item').prop('disabled', '');
                    });

                    $('#goodsTable > tbody > tr').dblclick(function () {
                        SelectGoods($(this));
                        dialog.modal('hide');
                    });
                });
            });
        }

        $('#addEditItem').click(function () {
            var lastPos = 0;
            $('#EditItemTable > tbody > tr').each(function () {
                var pos = $(this).attr('data-rownum') * 1;
                if (lastPos <= pos) {
                    lastPos = pos + 1;
                }
            });

            var row = $($('#EditItemsRow').html()).appendTo('#EditItemTable > tbody');
            row.attr('data-rownum', lastPos);
            $('input[name="OrderItems[0][GoodsId]"]', row).prop('name', 'OrderItems[' + lastPos+'][GoodsId]');
            $('input[name="OrderItems[0][GoodsName]"]', row).prop('name', 'OrderItems[' + lastPos +'][GoodsName]');
            $('input[name="OrderItems[0][GoodsBrand]"]', row).prop('name', 'OrderItems[' + lastPos +'][GoodsBrand]');
            $('input[name="OrderItems[0][GoodsCategory]"]', row).prop('name', 'OrderItems[' + lastPos +'][GoodsCategory]');
            $('input[name="OrderItems[0][GoodsSubCategory]"]', row).prop('name', 'OrderItems[' + lastPos +'][GoodsSubCategory]');
            $('input[name="OrderItems[0][Amount]"]', row).prop('name', 'OrderItems[' + lastPos +'][Amount]');
            $('input[name="OrderItems[0][Price]"]', row).prop('name', 'OrderItems[' + lastPos +'][Price]');
            $('.goods-selector',row).click(function () {
                GoodsSelector($(this));
            });

            $('.btn-delete-row', row).click(function () {
                $(this).closest('tr').remove();
            });
        });

        $('.goods-selector').click(function () {
            GoodsSelector($(this));
        });

        $('.btn-delete-row').click(function () {
            $(this).closest('tr').remove();
        });
    });
    </script>
}